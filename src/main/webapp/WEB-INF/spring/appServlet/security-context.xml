<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <http pattern="/resources/**" security="none"/>
    <http pattern="/login" security="none"/>

    <http auto-config='true'>
        <!-- Intercept-URLs will be evaluated in the order listed and the first match will be used. So you must put the most specific matches at the top. -->
        <intercept-url pattern="/user/**" access="ROLE_USER"/>

        <logout/>

        <form-login login-page='/login'
                    login-processing-url="/process-login"
                    username-parameter="username"
                    password-parameter="password"
                    default-target-url="/"
                    authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-handler-ref="authenticationFailureHandler"/>
    </http>

    <beans:bean id="authenticationSuccessHandler"
                class="com.parallelbrains.baselayout.security.AuthenticationSuccessHandler"/>
    <beans:bean id="authenticationFailureHandler"
                class="com.parallelbrains.baselayout.security.AuthenticationFailureHandler"/>

    <context:component-scan base-package="com.parallelbrains.baselayout.repository"/>
    <context:component-scan base-package="com.parallelbrains.baselayout.service"/>
    <context:component-scan base-package="com.parallelbrains.baselayout.security"/>

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <!--<password-encoder ref="bcryptEncoder"/>-->
        </authentication-provider>
    </authentication-manager>

    <beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Enable support for Spring Security's @Secured -->
    <!-- Enable support for Spring Security's @PreAuthorize, @PreFilter, @PostAuthorize and @PostFilter -->
    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>


    <!-- Uncomment this to see debugging information to monitor requests coming into the security filters -->
    <!--<debug/>-->

</beans:beans>